// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/cube2222/usos-notifier/credentials/credentials.proto

package credentials

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetSessionRequest struct {
	Userid               string   `protobuf:"bytes,1,opt,name=userid,proto3" json:"userid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSessionRequest) Reset()         { *m = GetSessionRequest{} }
func (m *GetSessionRequest) String() string { return proto.CompactTextString(m) }
func (*GetSessionRequest) ProtoMessage()    {}
func (*GetSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8ad10faa358e8ee, []int{0}
}

func (m *GetSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSessionRequest.Unmarshal(m, b)
}
func (m *GetSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSessionRequest.Marshal(b, m, deterministic)
}
func (m *GetSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSessionRequest.Merge(m, src)
}
func (m *GetSessionRequest) XXX_Size() int {
	return xxx_messageInfo_GetSessionRequest.Size(m)
}
func (m *GetSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSessionRequest proto.InternalMessageInfo

func (m *GetSessionRequest) GetUserid() string {
	if m != nil {
		return m.Userid
	}
	return ""
}

type GetSessionResponse struct {
	Sessionid            string   `protobuf:"bytes,1,opt,name=sessionid,proto3" json:"sessionid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSessionResponse) Reset()         { *m = GetSessionResponse{} }
func (m *GetSessionResponse) String() string { return proto.CompactTextString(m) }
func (*GetSessionResponse) ProtoMessage()    {}
func (*GetSessionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8ad10faa358e8ee, []int{1}
}

func (m *GetSessionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSessionResponse.Unmarshal(m, b)
}
func (m *GetSessionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSessionResponse.Marshal(b, m, deterministic)
}
func (m *GetSessionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSessionResponse.Merge(m, src)
}
func (m *GetSessionResponse) XXX_Size() int {
	return xxx_messageInfo_GetSessionResponse.Size(m)
}
func (m *GetSessionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSessionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSessionResponse proto.InternalMessageInfo

func (m *GetSessionResponse) GetSessionid() string {
	if m != nil {
		return m.Sessionid
	}
	return ""
}

type InvalidateSessionRequest struct {
	Userid               string   `protobuf:"bytes,1,opt,name=userid,proto3" json:"userid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InvalidateSessionRequest) Reset()         { *m = InvalidateSessionRequest{} }
func (m *InvalidateSessionRequest) String() string { return proto.CompactTextString(m) }
func (*InvalidateSessionRequest) ProtoMessage()    {}
func (*InvalidateSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8ad10faa358e8ee, []int{2}
}

func (m *InvalidateSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvalidateSessionRequest.Unmarshal(m, b)
}
func (m *InvalidateSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvalidateSessionRequest.Marshal(b, m, deterministic)
}
func (m *InvalidateSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvalidateSessionRequest.Merge(m, src)
}
func (m *InvalidateSessionRequest) XXX_Size() int {
	return xxx_messageInfo_InvalidateSessionRequest.Size(m)
}
func (m *InvalidateSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InvalidateSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InvalidateSessionRequest proto.InternalMessageInfo

func (m *InvalidateSessionRequest) GetUserid() string {
	if m != nil {
		return m.Userid
	}
	return ""
}

type InvalidateSessionResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InvalidateSessionResponse) Reset()         { *m = InvalidateSessionResponse{} }
func (m *InvalidateSessionResponse) String() string { return proto.CompactTextString(m) }
func (*InvalidateSessionResponse) ProtoMessage()    {}
func (*InvalidateSessionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8ad10faa358e8ee, []int{3}
}

func (m *InvalidateSessionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvalidateSessionResponse.Unmarshal(m, b)
}
func (m *InvalidateSessionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvalidateSessionResponse.Marshal(b, m, deterministic)
}
func (m *InvalidateSessionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvalidateSessionResponse.Merge(m, src)
}
func (m *InvalidateSessionResponse) XXX_Size() int {
	return xxx_messageInfo_InvalidateSessionResponse.Size(m)
}
func (m *InvalidateSessionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InvalidateSessionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InvalidateSessionResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*GetSessionRequest)(nil), "credentials.GetSessionRequest")
	proto.RegisterType((*GetSessionResponse)(nil), "credentials.GetSessionResponse")
	proto.RegisterType((*InvalidateSessionRequest)(nil), "credentials.InvalidateSessionRequest")
	proto.RegisterType((*InvalidateSessionResponse)(nil), "credentials.InvalidateSessionResponse")
}

func init() {
	proto.RegisterFile("github.com/cube2222/usos-notifier/credentials/credentials.proto", fileDescriptor_d8ad10faa358e8ee)
}

var fileDescriptor_d8ad10faa358e8ee = []byte{
	// 229 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xb2, 0x4f, 0xcf, 0x2c, 0xc9,
	0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0x4f, 0x2e, 0x4d, 0x4a, 0x35, 0x32, 0x32, 0x32, 0xd2,
	0x2f, 0x2d, 0xce, 0x2f, 0xd6, 0xcd, 0xcb, 0x2f, 0xc9, 0x4c, 0xcb, 0x4c, 0x2d, 0xd2, 0x4f, 0x2e,
	0x4a, 0x4d, 0x49, 0xcd, 0x2b, 0xc9, 0x4c, 0xcc, 0x29, 0x46, 0x66, 0xeb, 0x15, 0x14, 0xe5, 0x97,
	0xe4, 0x0b, 0x71, 0x23, 0x09, 0x29, 0x69, 0x73, 0x09, 0xba, 0xa7, 0x96, 0x04, 0xa7, 0x16, 0x17,
	0x67, 0xe6, 0xe7, 0x05, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0x89, 0x71, 0xb1, 0x95, 0x16,
	0xa7, 0x16, 0x65, 0xa6, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x41, 0x79, 0x4a, 0x46, 0x5c,
	0x42, 0xc8, 0x8a, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85, 0x64, 0xb8, 0x38, 0x8b, 0x21, 0x42,
	0x70, 0x0d, 0x08, 0x01, 0x25, 0x23, 0x2e, 0x09, 0xcf, 0xbc, 0xb2, 0xc4, 0x9c, 0xcc, 0x94, 0xc4,
	0x92, 0x54, 0x22, 0xed, 0x91, 0xe6, 0x92, 0xc4, 0xa2, 0x07, 0x62, 0x9d, 0xd1, 0x01, 0x46, 0x2e,
	0x6e, 0x67, 0x84, 0x0f, 0x84, 0x7c, 0xb9, 0xb8, 0x10, 0x8e, 0x12, 0x92, 0xd3, 0x43, 0xf6, 0x30,
	0x86, 0xd7, 0xa4, 0xe4, 0x71, 0xca, 0x43, 0x7d, 0x93, 0xc4, 0x25, 0x88, 0x61, 0xb7, 0x90, 0x2a,
	0x8a, 0x2e, 0x5c, 0xfe, 0x91, 0x52, 0x23, 0xa4, 0x0c, 0x62, 0x87, 0x93, 0x7e, 0x94, 0x2e, 0x49,
	0x91, 0x98, 0xc4, 0x06, 0x8e, 0x39, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4d, 0xd5, 0xef,
	0x18, 0xfc, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CredentialsClient is the client API for Credentials service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CredentialsClient interface {
	GetSession(ctx context.Context, in *GetSessionRequest, opts ...grpc.CallOption) (*GetSessionResponse, error)
	InvalidateSession(ctx context.Context, in *InvalidateSessionRequest, opts ...grpc.CallOption) (*InvalidateSessionResponse, error)
}

type credentialsClient struct {
	cc *grpc.ClientConn
}

func NewCredentialsClient(cc *grpc.ClientConn) CredentialsClient {
	return &credentialsClient{cc}
}

func (c *credentialsClient) GetSession(ctx context.Context, in *GetSessionRequest, opts ...grpc.CallOption) (*GetSessionResponse, error) {
	out := new(GetSessionResponse)
	err := c.cc.Invoke(ctx, "/credentials.Credentials/GetSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *credentialsClient) InvalidateSession(ctx context.Context, in *InvalidateSessionRequest, opts ...grpc.CallOption) (*InvalidateSessionResponse, error) {
	out := new(InvalidateSessionResponse)
	err := c.cc.Invoke(ctx, "/credentials.Credentials/InvalidateSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CredentialsServer is the server API for Credentials service.
type CredentialsServer interface {
	GetSession(context.Context, *GetSessionRequest) (*GetSessionResponse, error)
	InvalidateSession(context.Context, *InvalidateSessionRequest) (*InvalidateSessionResponse, error)
}

func RegisterCredentialsServer(s *grpc.Server, srv CredentialsServer) {
	s.RegisterService(&_Credentials_serviceDesc, srv)
}

func _Credentials_GetSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CredentialsServer).GetSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/credentials.Credentials/GetSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CredentialsServer).GetSession(ctx, req.(*GetSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Credentials_InvalidateSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InvalidateSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CredentialsServer).InvalidateSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/credentials.Credentials/InvalidateSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CredentialsServer).InvalidateSession(ctx, req.(*InvalidateSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Credentials_serviceDesc = grpc.ServiceDesc{
	ServiceName: "credentials.Credentials",
	HandlerType: (*CredentialsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSession",
			Handler:    _Credentials_GetSession_Handler,
		},
		{
			MethodName: "InvalidateSession",
			Handler:    _Credentials_InvalidateSession_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/cube2222/usos-notifier/credentials/credentials.proto",
}
